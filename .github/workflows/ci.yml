name: CI

on: [ push, pull_request_target, workflow_dispatch ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: stable
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --verbose
          version: latest
      - name: Build
        run: make build
      - name: Test
        run: make test
      - name: Check config schema & defaults
        run: |
          make config
          if [[ $(git diff --stat) != '' ]]; then
            git --no-pager diff
            echo 'run make config and commit changes'
            exit 1
          fi
  release:
    name: Release
    needs: [ test ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_type == 'branch' && github.ref_name == 'master'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: stable
      - name: Coverage
        uses: ncruces/go-coverage-report@main
      - name: Tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Package
        run: build/dist.sh
        env:
          NAME: ${{ github.event.repository.name }}
          VERSION: ${{ steps.tag.outputs.new_tag }}
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.new_tag }}
          name: ${{ steps.tag.outputs.new_tag }}
          body: ${{ steps.tag.outputs.changelog }}
          artifacts: "dist/*"
  image:
    name: Image
    runs-on: ubuntu-latest
    needs: [ test ]
    if: github.event_name != 'pull_request_target'
    steps:
      - uses: actions/checkout@v3
      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: docker buildx build --platform=linux/amd64,linux/arm64 -t ghcr.io/$GITHUB_REPOSITORY:${GITHUB_REF##*/} .
      - name: Publish
        run: docker push ghcr.io/$GITHUB_REPOSITORY:${GITHUB_REF##*/}
