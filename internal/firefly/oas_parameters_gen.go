// Code generated by ogen, DO NOT EDIT.

package firefly

import (
	"time"
)

// BulkUpdateTransactionsParams is parameters of bulkUpdateTransactions operation.
type BulkUpdateTransactionsParams struct {
	// The JSON query.
	Query string
}

// DefaultCurrencyParams is parameters of defaultCurrency operation.
type DefaultCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
}

// DeleteAccountParams is parameters of deleteAccount operation.
type DeleteAccountParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the account.
	ID string
}

// DeleteAttachmentParams is parameters of deleteAttachment operation.
type DeleteAttachmentParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the single attachment.
	ID string
}

// DeleteBillParams is parameters of deleteBill operation.
type DeleteBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the bill.
	ID string
}

// DeleteBudgetParams is parameters of deleteBudget operation.
type DeleteBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget.
	ID string
}

// DeleteBudgetLimitParams is parameters of deleteBudgetLimit operation.
type DeleteBudgetLimitParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget. The budget limit MUST be associated to the budget ID.
	ID string
	// The ID of the budget limit. The budget limit MUST be associated to the budget ID.
	LimitId string
}

// DeleteCategoryParams is parameters of deleteCategory operation.
type DeleteCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the category.
	ID string
}

// DeleteCurrencyParams is parameters of deleteCurrency operation.
type DeleteCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
}

// DeleteLinkTypeParams is parameters of deleteLinkType operation.
type DeleteLinkTypeParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the link type.
	ID string
}

// DeleteObjectGroupParams is parameters of deleteObjectGroup operation.
type DeleteObjectGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the object group.
	ID string
}

// DeletePiggyBankParams is parameters of deletePiggyBank operation.
type DeletePiggyBankParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the piggy bank.
	ID string
}

// DeleteRecurrenceParams is parameters of deleteRecurrence operation.
type DeleteRecurrenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the recurring transaction.
	ID string
}

// DeleteRuleParams is parameters of deleteRule operation.
type DeleteRuleParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule.
	ID string
}

// DeleteRuleGroupParams is parameters of deleteRuleGroup operation.
type DeleteRuleGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule group.
	ID string
}

// DeleteTagParams is parameters of deleteTag operation.
type DeleteTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Either the tag itself or the tag ID. If you use the tag itself, and it contains international
	// (non-ASCII) characters, your milage may vary.
	Tag string
}

// DeleteTransactionParams is parameters of deleteTransaction operation.
type DeleteTransactionParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction.
	ID string
}

// DeleteTransactionJournalParams is parameters of deleteTransactionJournal operation.
type DeleteTransactionJournalParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction journal (the split) you wish to delete.
	ID string
}

// DeleteTransactionLinkParams is parameters of deleteTransactionLink operation.
type DeleteTransactionLinkParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction link.
	ID string
}

// DeleteUserParams is parameters of deleteUser operation.
type DeleteUserParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The user ID.
	ID string
}

// DeleteWebhookParams is parameters of deleteWebhook operation.
type DeleteWebhookParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
}

// DeleteWebhookMessageParams is parameters of deleteWebhookMessage operation.
type DeleteWebhookMessageParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
	// The webhook message ID.
	MessageId int
}

// DeleteWebhookMessageAttemptParams is parameters of deleteWebhookMessageAttempt operation.
type DeleteWebhookMessageAttemptParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
	// The webhook message ID.
	MessageId int
	// The webhook message attempt ID.
	AttemptId int
}

// DestroyDataParams is parameters of destroyData operation.
type DestroyDataParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The type of data that you wish to destroy. You can only use one at a time.
	Objects DataDestroyObject
}

// DisableCurrencyParams is parameters of disableCurrency operation.
type DisableCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
}

// DownloadAttachmentParams is parameters of downloadAttachment operation.
type DownloadAttachmentParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the attachment.
	ID string
}

// EnableCurrencyParams is parameters of enableCurrency operation.
type EnableCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
}

// ExportAccountsParams is parameters of exportAccounts operation.
type ExportAccountsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// ExportBillsParams is parameters of exportBills operation.
type ExportBillsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// ExportBudgetsParams is parameters of exportBudgets operation.
type ExportBudgetsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// ExportCategoriesParams is parameters of exportCategories operation.
type ExportCategoriesParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// ExportPiggiesParams is parameters of exportPiggies operation.
type ExportPiggiesParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// ExportRecurringParams is parameters of exportRecurring operation.
type ExportRecurringParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// ExportRulesParams is parameters of exportRules operation.
type ExportRulesParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// ExportTagsParams is parameters of exportTags operation.
type ExportTagsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// ExportTransactionsParams is parameters of exportTransactions operation.
type ExportTransactionsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// Limit the export of transactions to these accounts only. Only asset accounts will be accepted.
	// Other types will be silently dropped.
	Accounts OptString
	// The file type the export file (CSV is currently the only option).
	Type OptExportFileFilter
}

// FireRuleParams is parameters of fireRule operation.
type FireRuleParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule.
	ID string
	// A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. If the
	// start date is not present, it will be set to one year ago. If you use this field, both the start
	// date and the end date must be present.
	Start OptDate
	// A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. If the end
	// date is not present, it will be set to today. If you use this field, both the start date and the
	// end date must be present.
	End OptDate
	// Limit the triggering of the rule to these asset accounts or liabilities. Only asset accounts and
	// liabilities will be accepted. Other types will be silently dropped.
	Accounts []int64
}

// FireRuleGroupParams is parameters of fireRuleGroup operation.
type FireRuleGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule group.
	ID string
	// A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. Both the
	// start date and the end date must be present.
	Start OptDate
	// A date formatted YYYY-MM-DD, to limit the transactions the actions will be applied to. Both the
	// start date and the end date must be present.
	End OptDate
	// Limit the triggering of the rule group to these asset accounts or liabilities. Only asset accounts
	// and liabilities will be accepted. Other types will be silently dropped.
	Accounts []int64
}

// GetAboutParams is parameters of getAbout operation.
type GetAboutParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// GetAccountParams is parameters of getAccount operation.
type GetAccountParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the account.
	ID string
	// A date formatted YYYY-MM-DD. When added to the request, Firefly III will show the account's
	// balance on that day.
	Date OptDate
}

// GetAccountsACParams is parameters of getAccountsAC operation.
type GetAccountsACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
	// If the account is an asset account or a liability, the autocomplete will also return the balance
	// of the account on this date.
	Date OptString
	// Optional filter on the account type(s) used in the autocomplete.
	Types []AccountTypeFilter
}

// GetAttachmentParams is parameters of getAttachment operation.
type GetAttachmentParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the attachment.
	ID string
}

// GetAvailableBudgetParams is parameters of getAvailableBudget operation.
type GetAvailableBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the available budget.
	ID string
}

// GetBasicSummaryParams is parameters of getBasicSummary operation.
type GetBasicSummaryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// A currency code like EUR or USD, to filter the result.
	CurrencyCode OptString
}

// GetBillParams is parameters of getBill operation.
type GetBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the bill.
	ID string
	// A date formatted YYYY-MM-DD. If it is are added to the request, Firefly III will calculate the
	// appropriate payment and paid dates.
	Start OptDate
	// A date formatted YYYY-MM-DD. If it is added to the request, Firefly III will calculate the
	// appropriate payment and paid dates.
	End OptDate
}

// GetBillsACParams is parameters of getBillsAC operation.
type GetBillsACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetBudgetParams is parameters of getBudget operation.
type GetBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the requested budget.
	ID string
	// A date formatted YYYY-MM-DD, to get info on how much the user has spent.
	Start OptDate
	// A date formatted YYYY-MM-DD, to get info on how much the user has spent.
	End OptDate
}

// GetBudgetLimitParams is parameters of getBudgetLimit operation.
type GetBudgetLimitParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget. The budget limit MUST be associated to the budget ID.
	ID string
	// The ID of the budget limit. The budget limit MUST be associated to the budget ID.
	LimitId int
}

// GetBudgetsACParams is parameters of getBudgetsAC operation.
type GetBudgetsACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetCategoriesACParams is parameters of getCategoriesAC operation.
type GetCategoriesACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetCategoryParams is parameters of getCategory operation.
type GetCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the category.
	ID string
	// A date formatted YYYY-MM-DD, to show spent and earned info.
	Start OptDate
	// A date formatted YYYY-MM-DD, to show spent and earned info.
	End OptDate
}

// GetChartAccountOverviewParams is parameters of getChartAccountOverview operation.
type GetChartAccountOverviewParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
}

// GetConfigurationParams is parameters of getConfiguration operation.
type GetConfigurationParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// GetCronParams is parameters of getCron operation.
type GetCronParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The CLI token of any user in Firefly III, required to run the cron jobs.
	CliToken string
	// A date formatted YYYY-MM-DD. This can be used to make the cron job pretend it's running
	// on another day.
	Date OptDate
	// Forces the cron job to fire, regardless of whether it has fired before. This may result
	// in double transactions or weird budgets, so be careful.
	Force OptBool
}

// GetCurrenciesACParams is parameters of getCurrenciesAC operation.
type GetCurrenciesACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetCurrenciesCodeACParams is parameters of getCurrenciesCodeAC operation.
type GetCurrenciesCodeACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetCurrencyParams is parameters of getCurrency operation.
type GetCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
}

// GetCurrentUserParams is parameters of getCurrentUser operation.
type GetCurrentUserParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// GetDefaultCurrencyParams is parameters of getDefaultCurrency operation.
type GetDefaultCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// GetLinkTypeParams is parameters of getLinkType operation.
type GetLinkTypeParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the link type.
	ID string
}

// GetObjectGroupParams is parameters of getObjectGroup operation.
type GetObjectGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the object group.
	ID string
}

// GetObjectGroupsACParams is parameters of getObjectGroupsAC operation.
type GetObjectGroupsACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetPiggiesACParams is parameters of getPiggiesAC operation.
type GetPiggiesACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetPiggiesBalanceACParams is parameters of getPiggiesBalanceAC operation.
type GetPiggiesBalanceACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetPiggyBankParams is parameters of getPiggyBank operation.
type GetPiggyBankParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the piggy bank.
	ID string
}

// GetPreferenceParams is parameters of getPreference operation.
type GetPreferenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The name of the preference.
	Name string
}

// GetRecurrenceParams is parameters of getRecurrence operation.
type GetRecurrenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the recurring transaction.
	ID string
}

// GetRecurringACParams is parameters of getRecurringAC operation.
type GetRecurringACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetRuleParams is parameters of getRule operation.
type GetRuleParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the object.
	ID string
}

// GetRuleGroupParams is parameters of getRuleGroup operation.
type GetRuleGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule group.
	ID string
}

// GetRuleGroupsACParams is parameters of getRuleGroupsAC operation.
type GetRuleGroupsACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetRulesACParams is parameters of getRulesAC operation.
type GetRulesACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetSingleConfigurationParams is parameters of getSingleConfiguration operation.
type GetSingleConfigurationParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The name of the configuration value you want to know.
	Name ConfigValueFilter
}

// GetSingleWebhookMessageParams is parameters of getSingleWebhookMessage operation.
type GetSingleWebhookMessageParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
	// The webhook message ID.
	MessageId int
}

// GetSingleWebhookMessageAttemptParams is parameters of getSingleWebhookMessageAttempt operation.
type GetSingleWebhookMessageAttemptParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
	// The webhook message ID.
	MessageId int
	// The webhook attempt ID.
	AttemptId int
}

// GetTagParams is parameters of getTag operation.
type GetTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Either the tag itself or the tag ID. If you use the tag itself, and it contains international
	// (non-ASCII) characters, your milage may vary.
	Tag string
	// Page number.
	Page OptInt
}

// GetTagACParams is parameters of getTagAC operation.
type GetTagACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetTransactionParams is parameters of getTransaction operation.
type GetTransactionParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction.
	ID string
}

// GetTransactionByJournalParams is parameters of getTransactionByJournal operation.
type GetTransactionByJournalParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction journal (split).
	ID string
}

// GetTransactionLinkParams is parameters of getTransactionLink operation.
type GetTransactionLinkParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction link.
	ID string
}

// GetTransactionTypesACParams is parameters of getTransactionTypesAC operation.
type GetTransactionTypesACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetTransactionsACParams is parameters of getTransactionsAC operation.
type GetTransactionsACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetTransactionsIDACParams is parameters of getTransactionsIDAC operation.
type GetTransactionsIDACParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The autocomplete search query.
	Query OptString
	// The number of items returned.
	Limit OptInt32
}

// GetUserParams is parameters of getUser operation.
type GetUserParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The user ID.
	ID string
}

// GetWebhookParams is parameters of getWebhook operation.
type GetWebhookParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
}

// GetWebhookMessageAttemptsParams is parameters of getWebhookMessageAttempts operation.
type GetWebhookMessageAttemptsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
	// The webhook message ID.
	MessageId int
	// Page number. The default pagination is per 50 items.
	Page OptInt32
}

// GetWebhookMessagesParams is parameters of getWebhookMessages operation.
type GetWebhookMessagesParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
}

// InsightExpenseAssetParams is parameters of insightExpenseAsset operation.
type InsightExpenseAssetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseBillParams is parameters of insightExpenseBill operation.
type InsightExpenseBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The bills to be included in the results.
	Bills []int64
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseBudgetParams is parameters of insightExpenseBudget operation.
type InsightExpenseBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The budgets to be included in the results.
	Budgets []int64
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseCategoryParams is parameters of insightExpenseCategory operation.
type InsightExpenseCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The categories to be included in the results.
	Categories []int64
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseExpenseParams is parameters of insightExpenseExpense operation.
type InsightExpenseExpenseParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you add the accounts ID's of expense accounts, only
	// those accounts
	// are included in the results. If you include ID's of asset accounts or liabilities, only
	// withdrawals from those
	// asset accounts / liabilities will be included. You can combine both asset / liability and expense
	// account ID's.
	// Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseNoBillParams is parameters of insightExpenseNoBill operation.
type InsightExpenseNoBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseNoBudgetParams is parameters of insightExpenseNoBudget operation.
type InsightExpenseNoBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseNoCategoryParams is parameters of insightExpenseNoCategory operation.
type InsightExpenseNoCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseNoTagParams is parameters of insightExpenseNoTag operation.
type InsightExpenseNoTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseTagParams is parameters of insightExpenseTag operation.
type InsightExpenseTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The tags to be included in the results.
	Tags []int64
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightExpenseTotalParams is parameters of insightExpenseTotal operation.
type InsightExpenseTotalParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only withdrawals from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightIncomeAssetParams is parameters of insightIncomeAsset operation.
type InsightIncomeAssetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only deposits to those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightIncomeCategoryParams is parameters of insightIncomeCategory operation.
type InsightIncomeCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The categories to be included in the results.
	Categories []int64
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only deposits to those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightIncomeNoCategoryParams is parameters of insightIncomeNoCategory operation.
type InsightIncomeNoCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only deposits to those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightIncomeNoTagParams is parameters of insightIncomeNoTag operation.
type InsightIncomeNoTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only deposits to those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightIncomeRevenueParams is parameters of insightIncomeRevenue operation.
type InsightIncomeRevenueParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you add the accounts ID's of revenue accounts, only
	// those accounts
	// are included in the results. If you include ID's of asset accounts or liabilities, only deposits
	// to those
	// asset accounts / liabilities will be included. You can combine both asset / liability and deposit
	// account ID's.
	// Other account ID's will be ignored.
	Accounts []int64
}

// InsightIncomeTagParams is parameters of insightIncomeTag operation.
type InsightIncomeTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The tags to be included in the results.
	Tags []int64
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only deposits to those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightIncomeTotalParams is parameters of insightIncomeTotal operation.
type InsightIncomeTotalParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only deposits to those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightTransferCategoryParams is parameters of insightTransferCategory operation.
type InsightTransferCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The categories to be included in the results.
	Categories []int64
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only transfers between those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightTransferNoCategoryParams is parameters of insightTransferNoCategory operation.
type InsightTransferNoCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only transfers between those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightTransferNoTagParams is parameters of insightTransferNoTag operation.
type InsightTransferNoTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only transfers from those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightTransferTagParams is parameters of insightTransferTag operation.
type InsightTransferTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The tags to be included in the results.
	Tags []int64
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only transfers between those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightTransferTotalParams is parameters of insightTransferTotal operation.
type InsightTransferTotalParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only transfers between those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// InsightTransfersParams is parameters of insightTransfers operation.
type InsightTransfersParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
	// The accounts to be included in the results. If you include ID's of asset accounts or liabilities,
	// only transfers between those
	// asset accounts / liabilities will be included. Other account ID's will be ignored.
	Accounts []int64
}

// ListAccountParams is parameters of listAccount operation.
type ListAccountParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is per 50 items.
	Page OptInt32
	// A date formatted YYYY-MM-DD. When added to the request, Firefly III will show the account's
	// balance on that day.
	Date OptDate
	// Optional filter on the account type(s) returned.
	Type OptAccountTypeFilter
}

// ListAccountByCurrencyParams is parameters of listAccountByCurrency operation.
type ListAccountByCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
	// Page number. The default pagination is 50.
	Page OptInt
	// A date formatted YYYY-MM-DD. When added to the request, Firefly III will show the account's
	// balance on that day.
	Date OptDate
	// Optional filter on the account type(s) returned.
	Type OptAccountTypeFilter
}

// ListAttachmentParams is parameters of listAttachment operation.
type ListAttachmentParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListAttachmentByAccountParams is parameters of listAttachmentByAccount operation.
type ListAttachmentByAccountParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the account.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListAttachmentByBillParams is parameters of listAttachmentByBill operation.
type ListAttachmentByBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the bill.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListAttachmentByBudgetParams is parameters of listAttachmentByBudget operation.
type ListAttachmentByBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListAttachmentByCategoryParams is parameters of listAttachmentByCategory operation.
type ListAttachmentByCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the category.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListAttachmentByPiggyBankParams is parameters of listAttachmentByPiggyBank operation.
type ListAttachmentByPiggyBankParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the piggy bank.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListAttachmentByTagParams is parameters of listAttachmentByTag operation.
type ListAttachmentByTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Either the tag itself or the tag ID.
	Tag string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListAttachmentByTransactionParams is parameters of listAttachmentByTransaction operation.
type ListAttachmentByTransactionParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListAvailableBudgetParams is parameters of listAvailableBudget operation.
type ListAvailableBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
	// A date formatted YYYY-MM-DD.
	Start OptDate
	// A date formatted YYYY-MM-DD.
	End OptDate
}

// ListAvailableBudgetByCurrencyParams is parameters of listAvailableBudgetByCurrency operation.
type ListAvailableBudgetByCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListBillParams is parameters of listBill operation.
type ListBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
	// A date formatted YYYY-MM-DD. If it is are added to the request, Firefly III will calculate the
	// appropriate payment and paid dates.
	Start OptDate
	// A date formatted YYYY-MM-DD. If it is added to the request, Firefly III will calculate the
	// appropriate payment and paid dates.
	End OptDate
}

// ListBillByCurrencyParams is parameters of listBillByCurrency operation.
type ListBillByCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListBillByObjectGroupParams is parameters of listBillByObjectGroup operation.
type ListBillByObjectGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the account.
	ID string
	// Page number. The default pagination is per 50 items.
	Page OptInt
}

// ListBudgetParams is parameters of listBudget operation.
type ListBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
	// A date formatted YYYY-MM-DD, to get info on how much the user has spent. You must submit both
	// start and end.
	Start OptDate
	// A date formatted YYYY-MM-DD, to get info on how much the user has spent. You must submit both
	// start and end.
	End OptDate
}

// ListBudgetLimitParams is parameters of listBudgetLimit operation.
type ListBudgetLimitParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// A date formatted YYYY-MM-DD.
	Start time.Time
	// A date formatted YYYY-MM-DD.
	End time.Time
}

// ListBudgetLimitByBudgetParams is parameters of listBudgetLimitByBudget operation.
type ListBudgetLimitByBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the requested budget.
	ID string
	// A date formatted YYYY-MM-DD.
	Start OptDate
	// A date formatted YYYY-MM-DD.
	End OptDate
}

// ListBudgetLimitByCurrencyParams is parameters of listBudgetLimitByCurrency operation.
type ListBudgetLimitByCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
	// Page number. The default pagination is 50.
	Page OptInt
	// Start date for the budget limit list.
	Start OptDate
	// End date for the budget limit list.
	End OptDate
}

// ListCategoryParams is parameters of listCategory operation.
type ListCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListCurrencyParams is parameters of listCurrency operation.
type ListCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListEventByPiggyBankParams is parameters of listEventByPiggyBank operation.
type ListEventByPiggyBankParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the piggy bank.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListEventByTransactionParams is parameters of listEventByTransaction operation.
type ListEventByTransactionParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListLinkTypeParams is parameters of listLinkType operation.
type ListLinkTypeParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50 items.
	Page OptInt
}

// ListLinksByJournalParams is parameters of listLinksByJournal operation.
type ListLinksByJournalParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction journal / the split.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListObjectGroupsParams is parameters of listObjectGroups operation.
type ListObjectGroupsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListPiggyBankParams is parameters of listPiggyBank operation.
type ListPiggyBankParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListPiggyBankByAccountParams is parameters of listPiggyBankByAccount operation.
type ListPiggyBankByAccountParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the account.
	ID string
	// Page number. The default pagination is per 50 items.
	Page OptInt
}

// ListPiggyBankByObjectGroupParams is parameters of listPiggyBankByObjectGroup operation.
type ListPiggyBankByObjectGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the account.
	ID string
	// Page number. The default pagination is per 50 items.
	Page OptInt
}

// ListPreferenceParams is parameters of listPreference operation.
type ListPreferenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListRecurrenceParams is parameters of listRecurrence operation.
type ListRecurrenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListRecurrenceByCurrencyParams is parameters of listRecurrenceByCurrency operation.
type ListRecurrenceByCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListRuleParams is parameters of listRule operation.
type ListRuleParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListRuleByBillParams is parameters of listRuleByBill operation.
type ListRuleByBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the bill.
	ID string
}

// ListRuleByCurrencyParams is parameters of listRuleByCurrency operation.
type ListRuleByCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
	// Page number. The default pagination per 50.
	Page OptInt
}

// ListRuleByGroupParams is parameters of listRuleByGroup operation.
type ListRuleByGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule group.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListRuleGroupParams is parameters of listRuleGroup operation.
type ListRuleGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
}

// ListTagParams is parameters of listTag operation.
type ListTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number.
	Page OptInt
}

// ListTransactionParams is parameters of listTransaction operation.
type ListTransactionParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
	// A date formatted YYYY-MM-DD. This is the start date of the selected range (inclusive).
	Start OptDate
	// A date formatted YYYY-MM-DD. This is the end date of the selected range (inclusive).
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByAccountParams is parameters of listTransactionByAccount operation.
type ListTransactionByAccountParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the account.
	ID string
	// Page number. The default pagination is per 50 items.
	Page OptInt
	// Limits the number of results on one page.
	Limit OptInt
	// A date formatted YYYY-MM-DD.
	Start OptDate
	// A date formatted YYYY-MM-DD.
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByBillParams is parameters of listTransactionByBill operation.
type ListTransactionByBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the bill.
	ID string
	// A date formatted YYYY-MM-DD.
	Start OptDate
	// A date formatted YYYY-MM-DD.
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByBudgetParams is parameters of listTransactionByBudget operation.
type ListTransactionByBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget.
	ID string
	// Limits the number of results on one page.
	Limit OptInt
	// Page number. The default pagination is 50.
	Page OptInt
	// A date formatted YYYY-MM-DD.
	Start OptDate
	// A date formatted YYYY-MM-DD.
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByBudgetLimitParams is parameters of listTransactionByBudgetLimit operation.
type ListTransactionByBudgetLimitParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget. The budget limit MUST be associated to the budget ID.
	ID string
	// The ID of the budget limit. The budget limit MUST be associated to the budget ID.
	LimitId string
	// Page number. The default pagination is 50.
	Page OptInt
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByCategoryParams is parameters of listTransactionByCategory operation.
type ListTransactionByCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the category.
	ID string
	// Page number. The default pagination is per 50.
	Page OptInt
	// A date formatted YYYY-MM-DD, to limit the result list.
	Start OptDate
	// A date formatted YYYY-MM-DD, to limit the result list.
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByCurrencyParams is parameters of listTransactionByCurrency operation.
type ListTransactionByCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
	// Page number. The default pagination is per 50.
	Page OptInt
	// A date formatted YYYY-MM-DD, to limit the list of transactions.
	Start OptDate
	// A date formatted YYYY-MM-DD, to limit the list of transactions.
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByLinkTypeParams is parameters of listTransactionByLinkType operation.
type ListTransactionByLinkTypeParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the link type.
	ID string
	// Page number. The default pagination is per 50 items.
	Page OptInt
	// A date formatted YYYY-MM-DD, to limit the results.
	Start OptDate
	// A date formatted YYYY-MM-DD, to limit the results.
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByRecurrenceParams is parameters of listTransactionByRecurrence operation.
type ListTransactionByRecurrenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the recurring transaction.
	ID string
	// Page number. The default pagination is 50.
	Page OptInt
	// A date formatted YYYY-MM-DD. Both the start and end date must be present.
	Start OptDate
	// A date formatted YYYY-MM-DD. Both the start and end date must be present.
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionByTagParams is parameters of listTransactionByTag operation.
type ListTransactionByTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Either the tag itself or the tag ID.
	Tag string
	// Page number. The default pagination is 50.
	Page OptInt
	// A date formatted YYYY-MM-DD. This is the start date of the selected range (inclusive).
	Start OptDate
	// A date formatted YYYY-MM-DD. This is the end date of the selected range (inclusive).
	End OptDate
	// Optional filter on the transaction type(s) returned.
	Type OptTransactionTypeFilter
}

// ListTransactionLinkParams is parameters of listTransactionLink operation.
type ListTransactionLinkParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is per 50 items.
	Page OptInt
}

// ListUserParams is parameters of listUser operation.
type ListUserParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The page number, if necessary. The default pagination is 50, so 50 users per page.
	Page OptInt
}

// ListWebhookParams is parameters of listWebhook operation.
type ListWebhookParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The page number, if necessary. The default pagination is 50, so 50 webhooks per page.
	Page OptInt
}

// PurgeDataParams is parameters of purgeData operation.
type PurgeDataParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// SearchAccountsParams is parameters of searchAccounts operation.
type SearchAccountsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Page number. The default pagination is 50.
	Page OptInt
	// The query you wish to search for.
	Query string
	// The type of accounts you wish to limit the search to.
	Type OptAccountTypeFilter
	// The account field(s) you want to search in.
	Field AccountSearchFieldFilter
}

// SearchTransactionsParams is parameters of searchTransactions operation.
type SearchTransactionsParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The query you wish to search for.
	Query string
	// Page number. The default pagination is 50.
	Page OptInt
}

// SetConfigurationParams is parameters of setConfiguration operation.
type SetConfigurationParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The name of the configuration value you want to update.
	Name ConfigValueUpdateFilter
}

// StoreAccountParams is parameters of storeAccount operation.
type StoreAccountParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreAttachmentParams is parameters of storeAttachment operation.
type StoreAttachmentParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreBillParams is parameters of storeBill operation.
type StoreBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreBudgetParams is parameters of storeBudget operation.
type StoreBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreBudgetLimitParams is parameters of storeBudgetLimit operation.
type StoreBudgetLimitParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget.
	ID string
}

// StoreCategoryParams is parameters of storeCategory operation.
type StoreCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreCurrencyParams is parameters of storeCurrency operation.
type StoreCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreLinkTypeParams is parameters of storeLinkType operation.
type StoreLinkTypeParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StorePiggyBankParams is parameters of storePiggyBank operation.
type StorePiggyBankParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StorePreferenceParams is parameters of storePreference operation.
type StorePreferenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreRecurrenceParams is parameters of storeRecurrence operation.
type StoreRecurrenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreRuleParams is parameters of storeRule operation.
type StoreRuleParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreRuleGroupParams is parameters of storeRuleGroup operation.
type StoreRuleGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreTagParams is parameters of storeTag operation.
type StoreTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreTransactionParams is parameters of storeTransaction operation.
type StoreTransactionParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreTransactionLinkParams is parameters of storeTransactionLink operation.
type StoreTransactionLinkParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreUserParams is parameters of storeUser operation.
type StoreUserParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// StoreWebhookParams is parameters of storeWebhook operation.
type StoreWebhookParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
}

// SubmitWebookParams is parameters of submitWebook operation.
type SubmitWebookParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
}

// TestRuleParams is parameters of testRule operation.
type TestRuleParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule.
	ID string
	// A date formatted YYYY-MM-DD, to limit the transactions the test will be applied to. Both the start
	// date and the end date must be present.
	Start OptDate
	// A date formatted YYYY-MM-DD, to limit the transactions the test will be applied to. Both the start
	// date and the end date must be present.
	End OptDate
	// Limit the testing of the rule to these asset accounts or liabilities. Only asset accounts and
	// liabilities will be accepted. Other types will be silently dropped.
	Accounts []int64
}

// TestRuleGroupParams is parameters of testRuleGroup operation.
type TestRuleGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule group.
	ID string
	// Page number. The default pagination is 50 items.
	Page OptInt
	// A date formatted YYYY-MM-DD, to limit the transactions the test will be applied to. Both the start
	// date and the end date must be present.
	Start OptDate
	// A date formatted YYYY-MM-DD, to limit the transactions the test will be applied to. Both the start
	// date and the end date must be present.
	End OptDate
	// Maximum number of transactions Firefly III will try. Don't set this too high, or it will take
	// Firefly III very long to run the test. I suggest a max of 200.
	SearchLimit OptInt
	// Maximum number of transactions the rule group can actually trigger on, before Firefly III stops. I
	// would suggest setting this to 10 or 15. Don't go above the user's page size, because browsing to
	// page 2 or 3 of a test result would fire the test again, making any navigation efforts very slow.
	TriggeredLimit OptInt
	// Limit the testing of the rule group to these asset accounts or liabilities. Only asset accounts
	// and liabilities will be accepted. Other types will be silently dropped.
	Accounts []int64
}

// UpdateAccountParams is parameters of updateAccount operation.
type UpdateAccountParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the account.
	ID string
}

// UpdateAttachmentParams is parameters of updateAttachment operation.
type UpdateAttachmentParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the attachment.
	ID string
}

// UpdateBillParams is parameters of updateBill operation.
type UpdateBillParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the bill.
	ID string
}

// UpdateBudgetParams is parameters of updateBudget operation.
type UpdateBudgetParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget.
	ID string
}

// UpdateBudgetLimitParams is parameters of updateBudgetLimit operation.
type UpdateBudgetLimitParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the budget. The budget limit MUST be associated to the budget ID.
	ID string
	// The ID of the budget limit. The budget limit MUST be associated to the budget ID.
	LimitId string
}

// UpdateCategoryParams is parameters of updateCategory operation.
type UpdateCategoryParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the category.
	ID string
}

// UpdateCurrencyParams is parameters of updateCurrency operation.
type UpdateCurrencyParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The currency code.
	Code string
}

// UpdateLinkTypeParams is parameters of updateLinkType operation.
type UpdateLinkTypeParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the link type.
	ID string
}

// UpdateObjectGroupParams is parameters of updateObjectGroup operation.
type UpdateObjectGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the object group.
	ID string
}

// UpdatePiggyBankParams is parameters of updatePiggyBank operation.
type UpdatePiggyBankParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the piggy bank.
	ID string
}

// UpdatePreferenceParams is parameters of updatePreference operation.
type UpdatePreferenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The name of the preference. Will always overwrite. Will be created if it does not exist.
	Name string
}

// UpdateRecurrenceParams is parameters of updateRecurrence operation.
type UpdateRecurrenceParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the recurring transaction.
	ID string
}

// UpdateRuleParams is parameters of updateRule operation.
type UpdateRuleParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the object.
	ID string
}

// UpdateRuleGroupParams is parameters of updateRuleGroup operation.
type UpdateRuleGroupParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the rule group.
	ID string
}

// UpdateTagParams is parameters of updateTag operation.
type UpdateTagParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// Either the tag itself or the tag ID. If you use the tag itself, and it contains international
	// (non-ASCII) characters, your milage may vary.
	Tag string
}

// UpdateTransactionParams is parameters of updateTransaction operation.
type UpdateTransactionParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction.
	ID string
}

// UpdateTransactionLinkParams is parameters of updateTransactionLink operation.
type UpdateTransactionLinkParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the transaction link.
	ID string
}

// UpdateUserParams is parameters of updateUser operation.
type UpdateUserParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The user ID.
	ID string
}

// UpdateWebhookParams is parameters of updateWebhook operation.
type UpdateWebhookParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The webhook ID.
	ID string
}

// UploadAttachmentParams is parameters of uploadAttachment operation.
type UploadAttachmentParams struct {
	// Unique identifier associated with this request.
	XTraceID OptUUID
	// The ID of the attachment.
	ID string
}
